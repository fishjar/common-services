swagger: '2.0'
info:
  version: 0.0.1
  title: Hello World App
host: 'localhost:3000'
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: X-API-Key
  JWT:
    description: 'Authorization: Bearer {token}'
    type: apiKey
    name: Authorization
    in: header
security:
  - APIKeyHeader: []
    JWT: []
paths:
  /account/login:
    post:
      summary: 登录
      description: 登录...
      security: []
      parameters:
        - in: body
          name: body
          description: 登录参数
          required: true
          schema:
            $ref: '#/definitions/LoginBody'
      responses:
        '200':
          description: 登录成功
          schema:
            $ref: '#/definitions/LoginResponse'
  /account/user:
    get:
      summary: 查询当前用户
      description: 查询当前用户..
      responses:
        '200':
          description: 查询成功
          headers:
            authtoken:
              type: string
              description: 新token续期
          schema:
            $ref: '#/definitions/UserDemo'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
  /medias:
    post:
      summary: 创建单个文件
      description: 创建单个文件...
      parameters:
        - in: body
          name: body
          description: 模型参数
          required: true
          schema:
            $ref: '#/definitions/Media'
      responses:
        '200':
          description: 创建成功
    get:
      summary: 查询多个文件
      description: 查询多个文件...
      parameters:
        - in: query
          name: pageNum
          type: integer
          description: 页码
          default: 1
        - in: query
          name: pageSize
          type: integer
          description: 分页大小
          default: 10
        - in: query
          name: sorter
          type: string
          description: 排序
      responses:
        '200':
          description: 查询成功
          schema:
            type: object
            properties:
              count:
                type: integer
              rows:
                type: array
                items:
                  $ref: '#/definitions/Media'
    patch:
      summary: 更新多个文件
      description: 更新多个文件...
      parameters:
        - in: body
          name: body
          description: body参数
          schema:
            type: array
            items:
              $ref: '#/definitions/Media'
      responses:
        '200':
          description: 更新成功
    delete:
      summary: 删除多个文件
      description: 删除多个文件...
      parameters:
        - in: body
          name: body
          description: body参数
          schema:
            type: object
            example:
              id:
                - '1'
                - '2'
      responses:
        '200':
          description: 更新成功
  '/medias/{id}':
    get:
      summary: 查询单个文件
      description: 查询单个文件..
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: ID
      responses:
        '200':
          description: 查询成功
          schema:
            $ref: '#/definitions/Media'
    patch:
      summary: 修改单个文件
      description: 修改单个文件..
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: ID
        - in: body
          name: body
          description: 模型参数
          required: true
          schema:
            $ref: '#/definitions/Media'
      responses:
        '200':
          description: 修改成功
    delete:
      summary: 删除单个文件
      description: 删除单个文件..
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: ID
      responses:
        '200':
          description: 删除成功
  /medias/multiple:
    post:
      summary: 创建多个文件
      description: 创建多个文件...
      parameters:
        - in: body
          name: body
          description: body参数
          schema:
            type: array
            items:
              $ref: '#/definitions/Media'
      responses:
        '200':
          description: 创建成功
definitions:
  Media:
    type: object
    x-isModel: true
    x-plural: Medias
    description: 文件
    required:
      - id
      - mime
      - filename
      - path
      - size
    properties:
      id:
        type: string
        format: uuid
        description: ID
        uniqueItems: true
      mime:
        type: string
        format: string(64)
        description: 文件类型
        x-message: 请输入
        x-showTable: true
        x-showFilter: true
      filename:
        type: string
        format: string(128)
        description: 文件名
        x-message: 请输入
        x-showTable: true
      title:
        type: string
        format: string(128)
        description: 文件标题
        x-message: 请输入
        x-showTable: true
      hashname:
        type: string
        format: string(64)
        description: 哈西值
        x-message: 请输入
        x-showTable: true
      ext:
        type: string
        format: string(4)
        description: 扩展名
        x-message: 请输入
        x-showTable: true
        x-showFilter: true
      path:
        type: string
        format: string(128)
        description: 保存路径
        x-message: 请输入
        x-showTable: true
      url:
        type: string
        format: string(255)
        description: 访问地址
        x-message: 请输入
        x-showTable: true
      description:
        type: string
        format: string(255)
        description: 描述
        x-message: 请输入
      size:
        type: integer
        format: int32
        description: 文件大小
        x-message: 请输入
        x-showTable: true
        x-showSorter: true
      width:
        type: integer
        format: int32
        description: 图片宽
        x-message: 请输入
        x-showTable: true
        x-showSorter: true
      height:
        type: integer
        format: int32
        description: 图片高
        x-message: 请输入
        x-showTable: true
        x-showSorter: true
    example:
      id: 5c984620-04f6-11e9-85d0-950f3b428717
      mime: image/png
      filename: 2016-09-14 11-30-09屏幕截图.png
      title: test_title
      hashname: 7b745b688b3d677a0a41c2c85cc56156
      ext: .png
      path: png/7b/74/7b745b688b3d677a0a41c2c85cc56156.png
      url: 'http://dev.media.test.com/png/7b/74/7b745b688b3d677a0a41c2c85cc56156.png'
      description: null
      size: 148584
      width: 600
      height: 779
      created_at: '2018-12-21T07:59:37.347Z'
      updated_at: '2018-12-21T07:59:37.347Z'
      deleted_at: null
      resize: 100
      resize_path: png/7b/74/7b745b688b3d677a0a41c2c85cc56156_100.png
      resize_url: >-
        http://dev.media.test.com/png/7b/74/7b745b688b3d677a0a41c2c85cc56156_100.png
      thumb: 64
      thumb_path: png/7b/74/7b745b688b3d677a0a41c2c85cc56156_s64.png
      thumb_url: >-
        http://dev.media.test.com/png/7b/74/7b745b688b3d677a0a41c2c85cc56156_s64.png
  UserDemo:
    type: object
    description: 用户模型
    required:
      - id
      - name
    properties:
      id:
        type: integer
        description: ID
      name:
        type: string
        description: 用户名
      avatar:
        type: string
        description: 头像
      email:
        type: string
        description: 邮箱
    example:
      name: Admin
      avatar: 'https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png'
      id: '00000001'
      email: test@test.com
  LoginBody:
    type: object
    description: 登录参数模型
    required:
      - userName
      - password
      - type
    properties:
      userName:
        type: string
        description: 用户名
      password:
        type: string
        description: 密码
      type:
        type: string
        description: 账户类型
    example:
      userName: admin
      password: '123456'
      type: username
  LoginResponse:
    type: object
    description: 登录返回数据模型
    required:
      - status
      - type
      - currentAuthority
      - authtoken
    properties:
      status:
        type: string
        description: 登录状态
      type:
        type: string
        description: 账号类型
      currentAuthority:
        type: string
        description: 当前角色
      authtoken:
        type: string
        description: 秘钥
  Error:
    type: object
    properties:
      message:
        type: string
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorItem'
    required:
      - message
  ErrorItem:
    type: object
    properties:
      errorCode:
        type: integer
      errorMessage:
        type: string
responses:
  NotFound:
    description: The specified resource was not found
    schema:
      $ref: '#/definitions/Error'
  Unauthorized:
    description: Unauthorized
    schema:
      $ref: '#/definitions/Error'
